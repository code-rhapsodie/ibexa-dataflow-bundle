imports:
    - { resource: services/comparators.yaml }

services:
    _defaults:
        public: false

    coderhapsodie.dataflow.connection: "@ibexa.persistence.connection"

    CodeRhapsodie\IbexaDataflowBundle\Controller\DashboardController:
        public: true
        tags:
            - { name: controller.service_arguments }
        arguments:
            $jobGateway: '@CodeRhapsodie\IbexaDataflowBundle\Gateway\JobGateway'
            $scheduledDataflowGateway: '@CodeRhapsodie\IbexaDataflowBundle\Gateway\ScheduledDataflowGateway'
        calls:
            - ['setContainer', ['@service_container']]
            - ['performAccessCheck', []]

    CodeRhapsodie\IbexaDataflowBundle\Controller\ScheduledDataflowController:
        public: true
        tags:
            - { name: controller.service_arguments }
        arguments:
            $notificationHandler: '@Ibexa\Contracts\AdminUi\Notification\NotificationHandlerInterface'
            $scheduledDataflowGateway: '@CodeRhapsodie\IbexaDataflowBundle\Gateway\ScheduledDataflowGateway'
            $translator: '@translator'
        calls:
            - [ 'setContainer', [ '@service_container' ] ]
            - [ 'performAccessCheck', [ ] ]

    CodeRhapsodie\IbexaDataflowBundle\Controller\JobController:
        public: true
        tags:
            - { name: controller.service_arguments }
        arguments:
            $jobGateway: '@CodeRhapsodie\IbexaDataflowBundle\Gateway\JobGateway'
            $notificationHandler: '@Ibexa\Contracts\AdminUi\Notification\NotificationHandlerInterface'
            $translator: '@translator'
        calls:
            - [ 'setContainer', [ '@service_container' ] ]
            - [ 'performAccessCheck', [ ] ]

    CodeRhapsodie\IbexaDataflowBundle\Writer\RepositoryWriter:
        abstract: true
        calls:
            - ['setUserSwitcher', ['@CodeRhapsodie\IbexaDataflowBundle\UserSwitcher\UserSwitcherInterface']]

    CodeRhapsodie\IbexaDataflowBundle\Writer\ContentWriter:
        parent: 'CodeRhapsodie\IbexaDataflowBundle\Writer\RepositoryWriter'
        public: false
        arguments:
            $creator: '@CodeRhapsodie\IbexaDataflowBundle\Core\Content\ContentCreatorInterface'
            $updater: '@CodeRhapsodie\IbexaDataflowBundle\Core\Content\ContentUpdaterInterface'

    CodeRhapsodie\IbexaDataflowBundle\UserSwitcher\UserSwitcherInterface: '@CodeRhapsodie\IbexaDataflowBundle\UserSwitcher\UserSwitcher'
    CodeRhapsodie\IbexaDataflowBundle\UserSwitcher\UserSwitcher:
        arguments:
            $permissionResolver: '@Ibexa\Contracts\Core\Repository\PermissionResolver'
            $userService: '@Ibexa\Contracts\Core\Repository\UserService'
            $adminLoginOrId: '%coderhapsodie.ibexa_dataflow.admin_login_or_id%'

    CodeRhapsodie\IbexaDataflowBundle\Core\Content\ContentCreatorInterface: '@CodeRhapsodie\IbexaDataflowBundle\Core\Content\ContentCreator'
    CodeRhapsodie\IbexaDataflowBundle\Core\Content\ContentCreator:
        arguments:
            $contentService: '@Ibexa\Contracts\Core\Repository\ContentService'
            $contentTypeService: '@Ibexa\Contracts\Core\Repository\ContentTypeService'
            $filler: '@CodeRhapsodie\IbexaDataflowBundle\Core\Field\ContentStructFieldFillerInterface'
            $matcher: '@CodeRhapsodie\IbexaDataflowBundle\Matcher\LocationMatcherInterface'

    CodeRhapsodie\IbexaDataflowBundle\Core\Content\ContentUpdaterInterface: '@CodeRhapsodie\IbexaDataflowBundle\Core\Content\ContentUpdater'
    CodeRhapsodie\IbexaDataflowBundle\Core\Content\ContentUpdater:
        arguments:
            $contentService: '@Ibexa\Contracts\Core\Repository\ContentService'
            $contentTypeService: '@Ibexa\Contracts\Core\Repository\ContentTypeService'
            $filler: '@CodeRhapsodie\IbexaDataflowBundle\Core\Field\ContentStructFieldFillerInterface'

    CodeRhapsodie\IbexaDataflowBundle\Core\Field\ContentStructFieldFillerInterface: '@CodeRhapsodie\IbexaDataflowBundle\Core\Field\ContentStructFieldFiller'
    CodeRhapsodie\IbexaDataflowBundle\Core\Field\ContentStructFieldFiller:
        arguments:
            $fieldValueCreators: !tagged 'coderhapsodie.ibexa_dataflow.field_value_creator'

    CodeRhapsodie\IbexaDataflowBundle\Matcher\LocationMatcherInterface: '@CodeRhapsodie\IbexaDataflowBundle\Matcher\LocationMatcher'
    CodeRhapsodie\IbexaDataflowBundle\Matcher\LocationMatcher:
        arguments:
            $locationService: '@Ibexa\Contracts\Core\Repository\LocationService'

    CodeRhapsodie\IbexaDataflowBundle\Core\Field\DefaultFieldValueCreator:
        arguments:
            $fieldTypeService: '@Ibexa\Contracts\Core\Repository\FieldTypeService'
        tags:
            - { name: 'coderhapsodie.ibexa_dataflow.field_value_creator', priority: -1000 }

    CodeRhapsodie\IbexaDataflowBundle\EventSubscriber\MenuSubscriber:
        tags: ['kernel.event_subscriber']

    CodeRhapsodie\IbexaDataflowBundle\Factory\ContentStructureFactoryInterface: '@CodeRhapsodie\IbexaDataflowBundle\Factory\ContentStructureFactory'

    CodeRhapsodie\IbexaDataflowBundle\Factory\ContentStructureFactory:
        arguments:
            $contentService: '@Ibexa\Contracts\Core\Repository\ContentService'

    CodeRhapsodie\IbexaDataflowBundle\Form\DataflowTypeChoiceType:
        arguments:
            $registry: '@CodeRhapsodie\DataflowBundle\Registry\DataflowTypeRegistryInterface'
        tags: ['form.type']

    CodeRhapsodie\IbexaDataflowBundle\Form\CreateScheduledType:
        tags: ['form.type']

    CodeRhapsodie\IbexaDataflowBundle\Form\UpdateScheduledType:
        tags: ['form.type']

    CodeRhapsodie\IbexaDataflowBundle\Form\CreateOneshotType:
        tags: ['form.type']

    CodeRhapsodie\IbexaDataflowBundle\Form\UserTimezoneAwareDateTimeType:
        arguments:
            $userPreferenceService: '@Ibexa\Contracts\Core\Repository\UserPreferenceService'
        tags: ['form.type']

    CodeRhapsodie\IbexaDataflowBundle\Gateway\ScheduledDataflowGateway:
        arguments:
            $scheduledDataflowRepository: '@CodeRhapsodie\DataflowBundle\Repository\ScheduledDataflowRepository'

    CodeRhapsodie\IbexaDataflowBundle\Gateway\JobGateway:
        arguments:
            $jobRepository: '@CodeRhapsodie\DataflowBundle\Repository\JobRepository'

    CodeRhapsodie\IbexaDataflowBundle\Tab\RepeatingTab:
        parent: Ibexa\Contracts\AdminUi\Tab\AbstractTab
        public: false
        arguments:
            $httpKernelRuntime: '@twig.runtime.httpkernel'
        tags:
            - {name: ibexa.admin_ui.tab, group: coderhapsodie-ibexa_dataflow}

    CodeRhapsodie\IbexaDataflowBundle\Tab\OneshotTab:
        parent: Ibexa\Contracts\AdminUi\Tab\AbstractTab
        public: false
        arguments:
            $httpKernelRuntime: '@twig.runtime.httpkernel'
        tags:
            - {name: ibexa.admin_ui.tab, group: coderhapsodie-ibexa_dataflow}

    CodeRhapsodie\IbexaDataflowBundle\Tab\HistoryTab:
        parent: Ibexa\Contracts\AdminUi\Tab\AbstractTab
        public: false
        arguments:
            $httpKernelRuntime: '@twig.runtime.httpkernel'
        tags:
            - {name: ibexa.admin_ui.tab, group: coderhapsodie-ibexa_dataflow}


    CodeRhapsodie\IbexaDataflowBundle\Filter\NotModifiedContentFilter:
        arguments:
            $contentService: '@Ibexa\Contracts\Core\Repository\ContentService'
            $comparator: '@CodeRhapsodie\IbexaDataflowBundle\Core\FieldComparator\FieldComparatorInterface'

    CodeRhapsodie\IbexaDataflowBundle\Core\FieldComparator\FieldComparatorInterface: '@CodeRhapsodie\IbexaDataflowBundle\Core\FieldComparator\DelegatorFieldComparator'
    CodeRhapsodie\IbexaDataflowBundle\Core\FieldComparator\DelegatorFieldComparator:

    CodeRhapsodie\IbexaDataflowBundle\Core\FieldComparator\AbstractFieldComparator:
        arguments:
            $fieldTypeService: '@Ibexa\Contracts\Core\Repository\FieldTypeService'
        abstract: true

    _cr.admin_tabs.ibexa_dataflow_group:
        parent: Ibexa\AdminUi\Component\TabsComponent
        autowire: true
        autoconfigure: false
        public: false
        arguments:
            $groupIdentifier: 'coderhapsodie-ibexa_dataflow'
        tags:
            - { name: ibexa.admin_ui.component, group: 'coderhapsodie-ibexa_dataflow' }
